[tool.black]
line-length = 80

[tool.isort]
default_section = "THIRDPARTY"
profile = "black"
# Headings
import_heading_stdlib = "Standard library"
import_heading_thirdparty = "Third-party"
import_heading_firstparty = "First-party"
import_heading_localfolder = "Local"
# Known modules to avoid misclassification
known_standard_library = [
    # Add standard library modules that may be misclassified by isort
]
known_third_party = [
    # Add third-party modules that may be misclassified by isort
    "wandb",
]
known_first_party = [
    # Add first-party modules that may be misclassified by isort
    "neural_lam",
]

[tool.flake8]
max-line-length = 80
ignore = [
    "E203", # Allow whitespace before ':' (https://github.com/PyCQA/pycodestyle/issues/373)
    "I002", # Don't check for isort configuration
    "W503", # Allow line break before binary operator (PEP 8-compatible)
]
per-file-ignores = [
    "__init__.py: F401", # Allow unused imports
]

[tool.codespell]
skip = "requirements/*"

# Pylint config
[tool.pylint]
ignore = [
    "create_mesh.py", # Disable linting for now, as major rework is planned/expected
]
# Temporary fix for import neural_lam statements until set up as proper package
init-hook='import sys; sys.path.append(".")'
[tool.pylint.TYPECHECK]
generated-members = [
    "numpy.*",
    "torch.*",
]
[tool.pylint.'MESSAGES CONTROL']
disable = [
    "C0114", # 'missing-module-docstring', Do not require module docstrings
    "R0901", # 'too-many-ancestors', Allow many layers of sub-classing
    "R0902", # 'too-many-instance-attribtes', Allow many attributes
    "R0913", # 'too-many-arguments', Allow many function arguments
    "R0914", # 'too-many-locals', Allow many local variables
    "W0223", # 'abstract-method', Subclasses do not have to override all abstract methods
]
[tool.pylint.DESIGN]
max-statements=100 # Allow for some more involved functions
[tool.pylint.IMPORTS]
allow-any-import-level="neural_lam"
[tool.pylint.SIMILARITIES]
min-similarity-lines=10

[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
dev = [
    "pre-commit>=3.7.0",
    "ipdb>=0.13.13",
    "pytest>=8.1.1",
    "ipykernel>=6.29.4",
    "nb-black @ git+https://github.com/leifdenby/nb_black/",
    "seaborn>=0.13.2",
]
[project]
name = "neural-lam"
version = "0.1.0"
description = "LAM-based data-driven forecasting"
authors = [
    {name = "Leif Denby", email = "lcd@dmi.dk"},
]
dependencies = [
    "numpy>=1.24.2",
    "wandb>=0.13.10",
    "matplotlib>=3.7.0",
    "scipy>=1.10.0",
    "pytorch-lightning>=2.0.3",
    "shapely>=2.0.1",
    "networkx>=3.0",
    "Cartopy>=0.22.0",
    "pyproj>=3.4.1",
    "tueplots>=0.0.8",
    "plotly>=5.15.0",
    "codespell>=2.0.0",
    "black>=21.9b0",
    "isort>=5.9.3",
    "flake8>=4.0.1",
    "pylint>=3.0.3",
    "pre-commit>=2.15.0",
    "torch-geometric>=2.5.2",
    "loguru>=0.7.2",
    "mllam-data-interface @ git+https://github.com/mllam/mllam-data-interface",
]
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
